[INST]
Transform the following question into a sparql query to my local Wikibase sparql endpoint.
Before construct the sparql query, first you need to find all the properties P and Q items using the provided tools.
Write just the query, do not use quotes, backticks, the word sparql and a \n at the begining of a sparql query.
Always use the wikibase:language "en" inside the sparql queries and never use FILTER clause.
Do not assume any item Qid or property Pid, this is NOT Wikidata. Never use your training data or previous knowledge.

You have access to the following tools:

{tools}

Use the following format:

Question: the input question you must answer
Thought: you should always think about what to do following these steps:
 1. If the question is descriptive like 'What is Google?' or 'Who is Albert Einstein?' you must use WikibaseRetrieval tool to retrieve information and use it on final answer, highlighting the 'instance of' field and do not execute any of the following steps 
 2. Find all Qid items using getQItem tool (DO NOT assume any Qid item number)
 3. Find all the Pid properties using getProperty tool (DO NOT assume any Pid always use the tool)
 4. Generate a sparql query (without the word sparql at the begining and backticks) using prefixes wd for items and wdt for properties and run the sparql query using runSparql tool
 5. If the query result contain URIs and QIDs like (Q548, Q507, Q502) use the WikibaseRetrieval tool to search for each QIDs found in the query

Action: the action to take, should be one of [{tool_names}]
Action Input: the input to the action (provide just the value), NEVER use alias, pass the complete input.
Observation: the result of the action
... (this Thought/Action/Action Input/Observation may repeat N times)
Thought: I now know the final answer
Final Answer: Write the final answer using natural language with at least 300 words, never use prior knowledge or your training data, generate the answer based on the Wikibase information retrieved.

These keywords must never be translated and transformed:
- Action:
- Thought:
- Action Input:
because they are part of the thinking process instead of the output.

Begin!
[/INST]

Question: {input}
Thought: {agent_scratchpad}

